server:
  port: ${PORT:8088}

authorization:
  service: ${AUTHORIZATION_SERVICE:keycloak}

search:
  service: ${SEARCH_SERVICE:none}

spring:
  output:
    ansi:
      enabled: always

  config:
    import: optional:.env[.properties]
  main:
    allow-bean-definition-overriding: true

  data:
    mongodb:
      database: disposableemail
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_PORT:27017}

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    listener:
      simple:
        prefetch: 1
      direct:
        prefetch: 1

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_JWT_SET_URI}
          issuer-uri: ${KEYCLOAK_REALM_ISSUER_URL}
    password: ${CRYPTO_PASSWORD:pass}
    salt: ${CRYPTO_SALT:e707efd5cf9f191d}
    cors:
      allowed-origins: http://localhost:5173
    role:
      user: USER
      admin: ADMIN
      customer: CUSTOMER

jwt:
  auth:
    converter:
      resource-id: keycloak-client
      principal-attribute: preferred_username

elasticsearch:
  uris: ${ELASTICSEARCH_URIS:http://localhost:9200}
  socket-timeout: "10s"

keycloak:
  enabled: true
  server:
    url: ${KEYCLOAK_SERVER_URL}
    realm: ${KEYCLOAK_SERVER_REALM}
    username: ${KEYCLOAK_SERVER_USERNAME}
    password: ${KEYCLOAK_SERVER_PASSWORD}
    client: ${KEYCLOAK_SERVER_CLIENT:admin-cli}
    use-resource-role-mappings: true

mail-server:
  name: ${MAIL_SERVER_NAME:Apache James}
  mailbox: ${MAILBOX_NAME:INBOX}
  base-url: ${MAIL_SERVER_BASE_URL}
  defaultUserSizeQuota: ${DEFAULT_USER_SIZE_QUOTA}
  quotaPath: ${QUOTA_PATH:/quota/users/}

logging:
  level:
    root: info
    org.springframework.security: DEBUG

resilience4j:
  retry:
    instances:
      retryAuthorizationService:
        maxAttempts: 15
        waitDuration: 5s
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
      retryMailService:
        maxAttempts: 15
        waitDuration: 3s
  ratelimiter:
    instances:
      ratelimiterAccountRegistration:
        limitForPeriod: 500
        limitRefreshPeriod: 1m
        timeoutDuration: 2s